// Generated by dia2code
#ifndef ENGINE__ENGINE__H
#define ENGINE__ENGINE__H

#include <map>
#include <memory>

namespace state {
  class Observable;
};
namespace engine {
  class Command;
};
namespace sf {
  class Drawable;
  class Transformable;
  class Font;
  class RenderWindow;
  class Texture;
  class Color;
  class Text;
  class Sprite;
  class VertexArray;
};
namespace render {
  class renderMap;
}

#include "state/Observable.h"
#include "render/renderMap.h"
#include "Command.h"

namespace engine {

  /// class Engine - 
  class Engine {
    // Associations
    // Attributes
  private:
    state::Observable curentMap;
    std::map<int, std::unique_ptr<Command>> currentCommand;
    // Operations
  public:
    Engine ();
    ~Engine ();
    const state::Map& getMap () const;
    void addCommand (int priority, Command* command);
    void update ();
    // Setters and Getters
  };

};

#endif
