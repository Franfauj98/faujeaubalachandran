// Generated by dia2code
#ifndef ENGINE__ENGINE__H
#define ENGINE__ENGINE__H

#include <vector>
#include <memory>

namespace engine {
  class Command;
};
namespace sf {
  class Drawable;
  class Transformable;
  class Font;
  class RenderWindow;
  class Texture;
  class Color;
  class Text;
  class Sprite;
  class VertexArray;
};
namespace render {
  class RenderMap;
};
namespace state {
  class Observable;
}

#include "Command.h"
#include "render/RenderMap.h"
#include "state/Observable.h"

namespace engine {

  /// class Engine - 
  class Engine {
    // Associations
    // Attributes
  private:
    std::vector<std::unique_ptr<Command>> commandList;
    std::vector<int> commandListId;
    // Operations
  public:
    Engine ();
    ~Engine ();
    void addCommand (Command cmd, int commandId);
    void execute ();
    // Setters and Getters
  };

};

#endif
