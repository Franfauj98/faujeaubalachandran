// Generated by dia2code
#ifndef CLIENT__CLIENT__H
#define CLIENT__CLIENT__H

#include <vector>
#include <memory>

namespace engine {
  class Engine;
};
namespace state {
  class Observable;
};
namespace render {
  class RenderMap;
};
namespace ai {
  class HeuristicAI;
}

#include "engine/Engine.h"
#include "state/Observable.h"
#include "render/RenderMap.h"
#include "ai/HeuristicAI.h"

namespace client {

  /// class Client - 
  class Client {
    // Associations
    // Attributes
  private:
    engine::Engine engine;
    std::vector<std::unique_ptr<ai::HeuristicAI>> ai;
    static state::Observable principalMap;
    render::RenderMap map;
    // Operations
  public:
    Client ();
    void run ();
    void engineUpdating ();
    void engineUpdated ();
    // Setters and Getters
  };

};

#endif
