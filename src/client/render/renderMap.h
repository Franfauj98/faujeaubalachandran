// Generated by dia2code
#ifndef RENDER__RENDERMAP__H
#define RENDER__RENDERMAP__H

#include <memory>

namespace render {
  class Layer;
  class TileSet;
};
namespace state {
  class Observable;
}

#include "Layer.h"
#include "TileSet.h"
#include "state/Observable.h"

namespace render {

  /// class renderMap - 
  class renderMap {
    // Associations
    // Attributes
  private:
    Layer basicMap;
    Layer decorMap;
    Layer buildingMap;
    Layer unitMap;
    Layer statsMap;
    std::unique_ptr<Layer> background;
    // Operations
  public:
    renderMap ();
    ~renderMap ();
    Layer getBuildingMap () const;
    Layer getBasicMap () const;
    Layer getDecorMap () const;
    Layer getUnitMap () const;
    Layer getStatsMap () const;
    std::unique_ptr<Layer> const& getBackground () const;
    Layer getSelectedTile () const;
    void setBuildingMap (Layer* buildingLayer);
    void setUnitMap (Layer* unitLayer) const;
    void setStatsMap (Layer* statsLayer) const;
    void setSelectedMap (Layer* selectedLayer) const;
    // Setters and Getters
  };

};

#endif
